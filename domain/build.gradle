buildscript {
    ext {
        springBootVersion = '3.0.3'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.github.kyago'
    version = '1.0'

    sourceCompatibility = 17
    targetCompatibility = 17

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        //querydsl
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    def querydslDir = "src/main/generated"

    clean {
        delete file(querydslDir) // 인텔리제이 Annotation processor 생성물 생성위치
    }
}